#+TITLE: Moom - A Moom port to GNU Emacs
#+STARTUP: showall
#+SETUPFILE: theme-readtheorg.setup
#+LINK: submodule https://github.com/takaxp/moom-images/blob/master/

[[https://melpa.org/#/moom][file:https://melpa.org/packages/moom-badge.svg]]

/Make your dominant hand FREE from your mouse/ :)

* Setup

After installing =moom.el= and =moom-font.el= (optional), activate =moom= by =(moom-mode 1)= in your =init.el=. This module requires [[https://www.gnu.org/software/emacs/][GNU Emacs]] *25.1 or later*.

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  ;; add settings here ...
  (moom-mode 1))
#+END_SRC

or

#+BEGIN_SRC emacs-lisp
(when (require 'moom nil t)
  ;; add settings here ...
  (moom-mode 1))
#+END_SRC

* A set of commands to control frame position and size by keyboard

#+CAPTION: demo for moving and zooming, frame maximized
[[https://github.com/takaxp/moom-images/blob/master/demo1.gif]]

Note - This module has basically been tested on [[https://www.apple.com/macos/high-sierra/][macOS High Sierra]] with a Full HD (1920x1080) single display.

** Move

 - moom-move-frame

*** Horizontal

 - moom-move-frame-left
 - moom-move-frame-right

*** Center

 - moom-move-frame-to-center
 - moom-move-frame-to-vertical-center
 - moom-move-frame-to-horizontal-center

** Fit to edge

 - moom-move-frame-to-edge-left
 - moom-move-frame-to-edge-right
 - moom-move-frame-to-edge-top
 - moom-move-frame-to-edge-bottom

** Expand

These functions will not change font size.

 - moom-change-frame-width-single
 - moom-change-frame-width-double
 - moom-change-frame-width-half-again
 - moom-change-frame-width
 - moom-change-frame-height
 - moom-cycle-frame-height

** Fill display

These functions normally change font size. But the behavior can be changed by =M-x moom-toggle-font-module=.

 - moom-fill-screen
 - moom-fill-top
 - moom-fill-bottom
 - moom-fill-left
 - moom-fill-right
 - moom-fill-top-left
 - moom-fill-top-right
 - moom-fill-bottom-left
 - moom-fill-bottom-right
 - moom-fill-band

Note - If you find any problems around font settings when resizing the Emacs frame, you can easily disable =moom-font.el=. Just toggle =moom-toggle-font-module= in your init.el

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (moom-toggle-font-module))
#+END_SRC

** Other functions

 - moom-reset
 - moom-update-height-steps
 - moom-screen-margin
 - moom-restore-last-status
 - moom-toggle-font-module
 - moom-toggle-frame-maximized
 - moom-cycle-line-spacing
 - moom-reset-line-spacing
 - moom-generate-font-table
 - moom-print-status
 - moom-version

*** How to setup screen margins

Just provide a list to setup screen margins. The list consists of four values to control screen margins from the ~top~, ~bottom~, ~left~, and ~right~ edge. When you set the optional 2nd argument as =t=, then the frame will be automatically resized for filling screen with given margins.

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (moom-screen-margin '(100 50 20 20) t)) ;; {top, bottom, left, right}
#+END_SRC

For macOS users, the default margin is =(23 0 0 0)=, and for other system types, it is also configured using combination of =frame-monitor-geometry= and =frame-monitor-workarea= when you activate =moom-mode=. But the actual work area is probably depends on user environment. So please call =moom-screen-margin= with an appropriate list to configure the margins if needed.

For Windows 10 users, =(0 50 0 10)= looks nice, but some gaps still exist on left and right edge of the screen. =(0 56 0 16)= may be suitable for Windows 8 users.

* Extension to integrate font resizing

No need to load =moom-font.el= explicitly. If the package is installed in your system, then it will be activated automatically. The package is basically provided for the users who rely on Japanese fonts.

#+CAPTION: demo for increasing and decreasing fonts, frame maximized
[[https://github.com/takaxp/moom-images/blob/master/demo2.gif]]

** Setting

Font names for ASCII and Japanese font are now automatically identified without user action when =moom-mode= is activated. But =moom-font-ascii-scale= and =moom-font-ja-scale= should be configured still manually according to your environment. If you don't satisfy the automatically configured setting for ASCII and Japanese font, then please set these parameters manually by functions of =moom-font-ascii= or =moom-font-ja=.

The default values for =moom-font-ascii-scale= and =moom-font-ja-scale= are =1.0= and =1.2= respectably. The scaling factors for each font are integrated into =face-font-rescale-alist= properly.

If you don't know which fonts are used in Emacs frame, you can easily check them by ~M-x moom-font-print-name-at-point~ or ~M-x describe-char~ on a character.

The following text is an example message when you type ~M-x moom-font-print-name-at-point~.

#+BEGIN_SRC txt
[moom-font] It’s "Menlo". Call ‘moom-font-ja’ or ‘moom-font-ascii’ with "Menlo".
#+END_SRC

After you identify the font names in a buffer, then please configure them as follows:

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom-font"
  (setq moom-font-ascii-scale 1.0)
  (setq moom-font-ja-scale 1.2)
  (moom-font-ascii "Menlo") ;; Ricty Diminished, Inconsolata
  (moom-font-ja "Migu 2M")) ;; Hiragino Maru Gothic Pro
#+END_SRC

Normally, ASCII and Japanese fonts will be updated when resizing fonts. But if you provide an optional argument to =moom-font-ascii= or =moom-font-ja=, the given font is immediately applied and reflected in each buffer. See the following example setting.

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom-font"
  (moom-font-ascii "Menlo" '(:immediate t))
  (moom-font-ja "Migu 2M" '(:immediate t)))
#+END_SRC

When you find the column exceeds 80 when the frame is maximized, then configure =moom-scaling-gradient= properly. It depends on ASCII font type. For instance, ~1.66~ (default) for Menlo, Monaco, ~2.0~ for Inconsolata. Please see the following section.

*** Font table

You can also use =M-x moom-generate-font-table= to identify appropriate values of =moom-scaling-gradient=, and additionally =moom-font-table=. After calling =moom-generate-font-table=, the current buffer will be changed to the ~*moom-font*~ buffer. Please follow the instructions described in that buffer.

Here is an example. ~Monaco~ is used for ASCII font and ~Migu 2M~ is used for Japanese font in these images. The upper image shows a gap between strings in ASCII and Japanese at the first line, the font table is not defined in this case. On the other hand, the lower image shows no gap since the font table is utilized to identify the correct size of font. You can freely customize the font table in you init.el for your convenience.

#+CAPTION: Without font table (Monaco: 13pt 8px)
[[https://github.com/takaxp/moom-images/blob/master/monaco-13pt8px.png]]

#+CAPTION: With font table (Monaco: 14pt 8px)
[[https://github.com/takaxp/moom-images/blob/master/monaco-14pt8px.png]]

** Resize font

 - moom-font-increase
 - moom-font-decrease
 - moom-font-size-reset

* User variables
** moom.el

#+CAPTION: User variables in moom.el
|                              | default                            | type    |
|------------------------------+------------------------------------+---------|
| moom-move-frame-pixel-offset | '(0 . 0)                           | sexp    |
| moom-min-frame-height        | 16                                 | integer |
| moom-init-line-spacing       | line-spacing                       | float   |
| moom-min-line-spacing        | 0.1                                | float   |
| moom-max-line-spacing        | 0.8                                | float   |
| moom-frame-width-single      | 80                                 | integer |
| moom-frame-width-double      | 163                                | integer |
| moom-horizontal-shifts       | '(200 200)                         | choice  |
| moom-fill-band-options       | '(:direction vertical :range 50.0) | plist   |
| moom-scaling-gradient        | 1.66                               | float   |
| moom-verbose                 | nil                                | boolean |
| moom-lighter                 | Moom                               | string  |

** moom-font.el

#+CAPTION: User variables in moom-font.el
|                       | default | type                            |
|-----------------------+---------+---------------------------------|
| moom-font-ascii       | Monaco  | string                          |
| moom-font-ja          | Osaka   | string                          |
| moom-font-init-size   | 12      | integer                         |
| moom-font-ascii-scale | 1.0     | float                           |
| moom-font-ja-scale    | 1.2     | float                           |
| moom-font-table       | nil     | (repeat (list integer integer)) |
| moom-font-verbose     | nil     | boolean                         |

* Example keybindings
** Overview

In general, =Cmd-<TAB>= is used to switch windows, which is not limited to Emacs.app. So it is natural to concentrate all keybindings associated to control frame position and size into the left side of your keyboard with pressing =Cmd=. The following example keybindings are basically designed in that manner.

#+CAPTION: Assgined keys
[[https://github.com/takaxp/moom-images/blob/master/layout.png]]

You can use =moom-recommended-keybindings= to set keybindings for each API in a bundle. The function require a list argument or ='all= . The list can contain multiple API types. When the argument is ='(move fit expand fill font reset)= , it is identical to ='all= .

** Move

[[https://github.com/takaxp/moom-images/blob/master/shifts.gif]] [[https://github.com/takaxp/moom-images/blob/master/move-right.gif]] [[https://github.com/takaxp/moom-images/blob/master/center.gif]]

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (define-key moom-mode-map (kbd "M-0") 'moom-move-frame) ;; to top-left corner
  (define-key moom-mode-map (kbd "M-1") 'moom-move-frame-left)
  (define-key moom-mode-map (kbd "M-2") 'moom-move-frame-to-center)
  (define-key moom-mode-map (kbd "M-3") 'moom-move-frame-right))
#+END_SRC

** Fit

[[https://github.com/takaxp/moom-images/blob/master/edges.gif]] [[https://github.com/takaxp/moom-images/blob/master/corners.gif]]

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (define-key moom-mode-map (kbd "M-<f1>") 'moom-move-frame-to-edge-left)
  (define-key moom-mode-map (kbd "M-<f3>") 'moom-move-frame-to-edge-right)
  (define-key moom-mode-map (kbd "<f1>") 'moom-move-frame-to-edge-top)
  (define-key moom-mode-map (kbd "S-<f1>") 'moom-move-frame-to-edge-bottom))
#+END_SRC

** Expand
[[https://github.com/takaxp/moom-images/blob/master/cycle-height.gif]] [[https://github.com/takaxp/moom-images/blob/master/expand.gif]]

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (define-key moom-mode-map (kbd "<f2>") 'moom-cycle-frame-height)
  (define-key moom-mode-map (kbd "C-c f s") 'moom-change-frame-width-single)
  (define-key moom-mode-map (kbd "C-c f d") 'moom-change-frame-width-double)
  (define-key moom-mode-map (kbd "C-c f a") 'moom-change-frame-width-half-again))
#+END_SRC

** Fill


[[https://github.com/takaxp/moom-images/blob/master/fill.gif]] [[https://github.com/takaxp/moom-images/blob/master/quarters.gif]]

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (define-key moom-mode-map (kbd "C-c f f t") 'moom-fill-top)
  (define-key moom-mode-map (kbd "C-c f f b") 'moom-fill-bottom)
  (define-key moom-mode-map (kbd "C-c f f l") 'moom-fill-left)
  (define-key moom-mode-map (kbd "C-c f f r") 'moom-fill-right)
  (define-key moom-mode-map (kbd "C-c f f 1") 'moom-fill-top-left)
  (define-key moom-mode-map (kbd "C-c f f 2") 'moom-fill-top-right)
  (define-key moom-mode-map (kbd "C-c f f 3") 'moom-fill-bottom-left)
  (define-key moom-mode-map (kbd "C-c f f 4") 'moom-fill-bottom-right)
  (define-key moom-mode-map (kbd "C-c f f m") 'moom-fill-band))
#+END_SRC

** Fill (screen by toggle)

[[https://github.com/takaxp/moom-images/blob/master/fill-screen.gif]]

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (define-key moom-mode-map (kbd "M-<f2>") 'moom-toggle-frame-maximized))
#+END_SRC

** Reset and resize
*** Reset Frame size, position, and font size

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (define-key moom-mode-map (kbd "C-c C-0") 'moom-reset))
#+END_SRC

*** Font size (require moom-font.el)

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (define-key moom-mode-map (kbd "C--") 'moom-font-decrease)
  (define-key moom-mode-map (kbd "C-=") 'moom-font-increase)
  (define-key moom-mode-map (kbd "C-0") 'moom-font-size-reset)
  (define-key moom-mode-map (kbd "C-_") 'text-scale-decrease) ;; built-in for ascii
  (define-key moom-mode-map (kbd "C-+") 'text-scale-increase) ;; built-in for ascii

  ;; Recommended for stable presentation during font size increasing
  (add-hook 'moom-font-after-resize-hook #'moom-move-frame-to-edge-top))
#+END_SRC

* Collaboration with other packages
** Org mode (org-agenda)

Expand the frame width temporarily during org-agenda is active.

[[https://github.com/takaxp/moom-images/blob/master/org-agenda.gif]]

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (with-eval-after-load "org"
    (add-hook 'org-agenda-mode-hook #'moom-change-frame-width-half-again)
    (defun advice:org-agenda--quit (&optional _bury)
      (moom-change-frame-width))
    (advice-add 'org-agenda--quit :after #'advice:org-agenda--quit)))
#+END_SRC

** Org mode (org-tree-slide)

Entering quickly to the frame maximized presentation with [[https://github.com/takaxp/org-tree-slide][org-tree-slide.el]]. No additional settings are required. Just =M-x moom-toggle-frame-maximized=. The font is automatically scaled to be maintained the frame width at 80 even if you use Japanese font.

[[https://github.com/takaxp/moom-images/blob/master/org-tree-slide.gif]]

** Org mode

Note - /Under consideration, but you can try./

Run =org-redisplay-inline-images= after font resizing to synchronize the image width and font size automatically.

#+BEGIN_SRC emacs-lisp
(with-eval-after-load "moom"
  (with-eval-after-load "org"
    (add-hook 'moom-font-after-resize-hook #'org-redisplay-inline-images)))
#+END_SRC

* Hooks

 - moom-before-fill-screen-hook
 - moom-after-fill-screen-hook
 - moom-resize-frame-height-hook
 - moom-font-before-resize-hook (in moom-font.el)
 - moom-font-after-resize-hook (in moom-font.el)

* Acknowledgment

This package is highly inspired from [[https://manytricks.com/moom/]["Moom"]] released by [[https://manytricks.com/][Many Tricks]]. Moom stands for "Mo"ve and zo"om". Cool!

If you like and need the capabilities of changing window position and size by keyboard at the OS level, buy [[https://manytricks.com/moom/][Moom]] now!

** Keycastr

For writing README, [[https://github.com/keycastr/keycastr][keycastr]] was utilized to capture keystrokes of each command. Thanks! but ~Shift+F1~ was recorded as ~?~. Haha... :p

* Related packages

 1) [[https://www.emacswiki.org/emacs/frame-cmds.el][frame-cmds.el]]
    - This package provides many fundamental APIs to control frame and window. If you want to control them more specifically and precisely, you may want to try this nice package. But the license is not open and not distributed through MELPA.
 2) [[https://github.com/zonuexe/emacs-presentation-mode][presentation.el]]
    - It is highly recommended to try this vital package to scale and restore text size easily for nice viewing when you present your source code rendered in the Emacs buffers. Find more details at the above repository.
